# Generated by Django 5.2 on 2025-09-27 20:50

import django.db.models.deletion
import storages.backends.s3
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('experiences', '0003_remove_experience_booking_link_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name for admin reference', max_length=200)),
                ('subject', models.CharField(help_text='Email subject line. Use {{}} for merge fields like {{first_name}}', max_length=300)),
                ('html_content', models.TextField(help_text='HTML email content. Use {{}} for merge fields like {{first_name}}, {{experiences_count}}')),
                ('text_content', models.TextField(blank=True, help_text='Plain text version (optional, will be auto-generated if empty)')),
                ('category', models.CharField(choices=[('welcome', 'Welcome/Onboarding'), ('experiences', 'New Experiences'), ('community', 'Community Updates'), ('sustainability', 'Sustainability Tips'), ('newsletter', 'Newsletter'), ('announcement', 'Announcements'), ('other', 'Other')], default='other', max_length=20)),
                ('available_merge_fields', models.JSONField(default=list, help_text='Available merge fields for this template (auto-populated)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Campaign name for tracking', max_length=200)),
                ('recipient_type', models.CharField(choices=[('all_users', 'All Users'), ('active_users', 'Active Users (logged in last 30 days)'), ('survey_completed', 'Users who completed surveys'), ('trip_creators', 'Users who created trips'), ('admin_only', 'Admin Users Only (for testing)'), ('custom', 'Custom Selection')], default='all_users', max_length=20)),
                ('mode', models.CharField(choices=[('test', 'Test Mode (Admin users only)'), ('production', 'Production Mode (Send to selected recipients)')], default='test', max_length=10)),
                ('scheduled_send', models.DateTimeField(blank=True, help_text='Leave empty to send immediately', null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('completed', 'Completed'), ('failed', 'Failed')], default='draft', max_length=10)),
                ('total_recipients', models.IntegerField(default=0)),
                ('emails_sent', models.IntegerField(default=0)),
                ('emails_failed', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
                ('custom_recipients', models.ManyToManyField(blank=True, help_text="Used when recipient_type is 'custom'", related_name='custom_campaigns', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.emailtemplate')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TravelSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('travel_styles', models.JSONField(default=list, help_text='Selected travel styles (stored as list)')),
                ('accommodation_preferences', models.JSONField(default=list, help_text='Preferred accommodation types')),
                ('transport_preferences', models.JSONField(default=list, help_text='Preferred transportation methods')),
                ('budget_range', models.CharField(choices=[('budget', 'Budget ($0-50/day)'), ('mid_range', 'Mid-range ($50-150/day)'), ('luxury', 'Luxury ($150+/day)'), ('varies', 'Varies by trip')], default='varies', max_length=20)),
                ('travel_frequency', models.CharField(choices=[('rarely', 'Rarely (once a year or less)'), ('occasionally', 'Occasionally (2-3 times a year)'), ('regularly', 'Regularly (4-6 times a year)'), ('frequently', 'Frequently (monthly or more)')], default='occasionally', max_length=20)),
                ('sustainability_factors', models.JSONField(default=list, help_text='Important sustainability factors')),
                ('group_size_preference', models.CharField(choices=[('solo', 'Solo Travel'), ('couple', 'Couple'), ('small_group', 'Small Group (3-5 people)'), ('large_group', 'Large Group (6+ people)'), ('family', 'Family with Children')], default='solo', max_length=20)),
                ('trip_duration_preference', models.CharField(choices=[('weekend', 'Weekend (1-3 days)'), ('short', 'Short Trip (4-7 days)'), ('medium', 'Medium Trip (1-2 weeks)'), ('long', 'Long Trip (3+ weeks)'), ('varies', 'Varies')], default='short', max_length=20)),
                ('dream_destination', models.CharField(blank=True, max_length=200)),
                ('sustainability_goals', models.TextField(blank=True, help_text='What are your personal sustainability goals when traveling?', max_length=1000)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='travel_surveys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-completed_at'],
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('trip_status', models.CharField(choices=[('planning', 'Planning'), ('seeking_buddies', 'Seeking Travel Buddies'), ('confirmed', 'Confirmed'), ('completed', 'Completed')], default='planning', max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('trip_duration_preference', models.CharField(choices=[('short', 'Short Trip (1-7 days)'), ('medium', 'Medium Trip (1-2 weeks)'), ('long', 'Long Trip (2-4 weeks)'), ('extended', 'Extended Journey (1+ months)')], default='short', max_length=20)),
                ('group_size_preference', models.CharField(choices=[('solo', 'Solo Adventure'), ('small', 'Small Group (2-4 people)'), ('medium', 'Medium Group (5-8 people)'), ('large', 'Large Group (9+ people)')], default='solo', max_length=20)),
                ('budget_range', models.CharField(choices=[('budget', 'Budget ($0-1,000)'), ('moderate', 'Moderate ($1,000-3,000)'), ('comfortable', 'Comfortable ($3,000-5,000)'), ('luxury', 'Luxury ($5,000+)')], default='moderate', max_length=20)),
                ('travel_frequency', models.CharField(choices=[('slow', 'Slow & Mindful Travel'), ('moderate', 'Balanced Exploration'), ('frequent', 'Active Adventure'), ('intensive', 'Intensive Experience')], default='moderate', max_length=20)),
                ('seeking_buddies', models.CharField(choices=[('yes', 'Yes, seeking travel buddies'), ('maybe', 'Open to meeting fellow travelers'), ('no', 'Planning solo/with existing group')], default='yes', max_length=10)),
                ('travel_styles', models.JSONField(blank=True, default=list)),
                ('sustainability_priority', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=3)),
                ('sustainability_factors', models.JSONField(blank=True, default=list)),
                ('trip_image', models.ImageField(blank=True, null=True, upload_to='trip_images/')),
                ('visibility', models.CharField(choices=[('public', 'Public - All HygGeo users'), ('community', 'Community - Members only'), ('private', 'Private - Only me')], default='public', max_length=20)),
                ('allow_messages', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_trips', to=settings.AUTH_USER_MODEL)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='experiences.destination')),
                ('experiences', models.ManyToManyField(blank=True, related_name='trips', to='experiences.experience')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='accounts.message')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='accounts.trip')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, storage=storages.backends.s3.S3Storage(), upload_to='avatars/')),
                ('sustainability_priority', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Very High'), (5, 'Essential')], default=3, help_text='How important is sustainability in your travel decisions?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='pending', max_length=10)),
                ('subject_sent', models.CharField(help_text='Subject after merge field processing', max_length=300)),
                ('error_message', models.TextField(blank=True, help_text='Error details if send failed')),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='accounts.emailcampaign')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('campaign', 'recipient')},
            },
        ),
    ]
