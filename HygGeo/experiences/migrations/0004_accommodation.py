# Generated by Django 5.2 on 2025-10-08 07:47

import django.core.validators
import django.db.models.deletion
import storages.backends.s3
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('experiences', '0003_remove_experience_booking_link_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(help_text='Brief description for cards', max_length=300)),
                ('accommodation_type', models.CharField(choices=[('hotel', 'Hotel'), ('hostel', 'Hostel'), ('eco_lodge', 'Eco-Lodge'), ('guesthouse', 'Guesthouse'), ('boutique', 'Boutique Hotel'), ('resort', 'Resort'), ('airbnb', 'Airbnb/Vacation Rental'), ('camping', 'Camping/Glamping'), ('homestay', 'Homestay'), ('cabin', 'Cabin/Cottage')], max_length=20)),
                ('budget_range', models.CharField(choices=[('budget', 'Budget ($0-50/night)'), ('mid_range', 'Mid-range ($50-150/night)'), ('luxury', 'Luxury ($150+/night)')], max_length=20)),
                ('price_per_night_from', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_per_night_to', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('booking_link', models.URLField(blank=True, help_text='Booking/affiliate link')),
                ('sustainability_score', models.IntegerField(default=5, help_text='Sustainability rating from 1-10', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('hygge_factor', models.IntegerField(default=5, help_text='How well this accommodation embodies hygge principles (1-10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('carbon_neutral', models.BooleanField(default=False)),
                ('supports_local_community', models.BooleanField(default=False)),
                ('eco_certified', models.BooleanField(default=False, help_text='Has environmental certification')),
                ('address', models.TextField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('main_image', models.ImageField(blank=True, null=True, storage=storages.backends.s3.S3Storage(), upload_to='accommodations/')),
                ('gallery_images', models.JSONField(blank=True, default=list, help_text='List of image URLs')),
                ('amenities', models.JSONField(default=list, help_text='List of amenities (wifi, breakfast, parking, etc.)')),
                ('room_types', models.JSONField(default=list, help_text='Types of rooms available')),
                ('total_rooms', models.IntegerField(blank=True, help_text='Total number of rooms', null=True)),
                ('max_guests', models.IntegerField(blank=True, help_text='Maximum guests per room', null=True)),
                ('check_in_time', models.TimeField(blank=True, null=True)),
                ('check_out_time', models.TimeField(blank=True, null=True)),
                ('cancellation_policy', models.TextField(blank=True)),
                ('meta_title', models.CharField(blank=True, max_length=60)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for admin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accommodations', to='experiences.destination')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accommodations', to='experiences.provider')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
