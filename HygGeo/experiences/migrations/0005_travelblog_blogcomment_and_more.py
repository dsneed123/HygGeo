# Generated by Django 5.2 on 2025-10-08 08:03

import django.db.models.deletion
import storages.backends.s3
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('experiences', '0004_accommodation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TravelBlog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('content', models.TextField(help_text='Main blog content - supports markdown')),
                ('excerpt', models.CharField(help_text='Short excerpt for cards and previews', max_length=300)),
                ('featured_image', models.ImageField(blank=True, help_text='Main image for the blog post', null=True, storage=storages.backends.s3.S3Storage(), upload_to='blog/')),
                ('gallery_images', models.JSONField(blank=True, default=list, help_text='Additional images for the post')),
                ('tags', models.JSONField(blank=True, default=list, help_text="Tags for this post (e.g., ['adventure', 'solo travel', 'budget'])")),
                ('views_count', models.IntegerField(default=0)),
                ('likes_count', models.IntegerField(default=0)),
                ('meta_title', models.CharField(blank=True, max_length=60)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('is_published', models.BooleanField(default=False, help_text='Publish this post to make it visible to others')),
                ('is_featured', models.BooleanField(default=False, help_text='Feature this post on the blog homepage')),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accommodation', models.ForeignKey(blank=True, help_text='Link to a specific accommodation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_posts', to='experiences.accommodation')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='travel_blogs', to=settings.AUTH_USER_MODEL)),
                ('destination', models.ForeignKey(blank=True, help_text='Main destination featured in this post', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_posts', to='experiences.destination')),
                ('experience', models.ForeignKey(blank=True, help_text='Link to a specific experience', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_posts', to='experiences.experience')),
                ('liked_by', models.ManyToManyField(blank=True, related_name='liked_blogs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_comments', to=settings.AUTH_USER_MODEL)),
                ('blog_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='experiences.travelblog')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='travelblog',
            index=models.Index(fields=['-created_at'], name='experiences_created_5636ed_idx'),
        ),
        migrations.AddIndex(
            model_name='travelblog',
            index=models.Index(fields=['author', '-created_at'], name='experiences_author__19f4f6_idx'),
        ),
        migrations.AddIndex(
            model_name='travelblog',
            index=models.Index(fields=['is_published', '-published_at'], name='experiences_is_publ_fbb0bb_idx'),
        ),
    ]
